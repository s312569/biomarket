;; Analyzed by ClojureScript 1.8.51
{:use-macros {defroute secretary.core, go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name biomarket.login, :imports nil, :requires {ut biomarket.utilities, secretary secretary.core, dom om.dom, serve biomarket.server, biomarket.server biomarket.server, biomarket.utilities biomarket.utilities, om.dom om.dom, cljs.core.async cljs.core.async, events goog.events, om.core om.core, om om.core, secretary.core secretary.core, goog.events goog.events}, :uses {pub cljs.core.async, log biomarket.utilities, <! cljs.core.async, chan cljs.core.async, sub cljs.core.async, pub-info biomarket.utilities, >! cljs.core.async, put! cljs.core.async}, :defs {->t_biomarket$login37923 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([login _ owner meta37924])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.login/->t_biomarket$login37923, :variadic false, :file "src/cljs/biomarket/login.cljs", :method-params ([login _ owner meta37924]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 120, :max-fixed-arity 4, :fn-var true, :arglists (quote ([login _ owner meta37924])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$login37893 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.login/t_biomarket$login37893, :file "src/cljs/biomarket/login.cljs", :type true, :anonymous true, :column 3, :line 68, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$login37893 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([or-table _ owner meta37894])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.login/->t_biomarket$login37893, :variadic false, :file "src/cljs/biomarket/login.cljs", :method-params ([or-table _ owner meta37894]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 68, :max-fixed-arity 4, :fn-var true, :arglists (quote ([or-table _ owner meta37894])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$login37903 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([login-display inputs owner meta37904])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.login/->t_biomarket$login37903, :variadic false, :file "src/cljs/biomarket/login.cljs", :method-params ([login-display inputs owner meta37904]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 86, :max-fixed-arity 4, :fn-var true, :arglists (quote ([login-display inputs owner meta37904])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$login37896 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([or-table _ owner meta37897])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.login/->t_biomarket$login37896, :variadic false, :file "src/cljs/biomarket/login.cljs", :method-params ([or-table _ owner meta37897]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 68, :max-fixed-arity 4, :fn-var true, :arglists (quote ([or-table _ owner meta37897])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, test-username-exists {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/login.cljs", :line 113, :column 7, :end-line 113, :end-column 27, :arglists (quote ([owner {:keys [fname element]}]))}, :name biomarket.login/test-username-exists, :variadic false, :file "src/cljs/biomarket/login.cljs", :end-column 27, :method-params ([owner p__37909]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 2, :fn-var true, :arglists (quote ([owner {:keys [fname element]}]))}, t_biomarket$login37923 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.login/t_biomarket$login37923, :file "src/cljs/biomarket/login.cljs", :type true, :anonymous true, :column 3, :line 120, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$login37890 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.login/t_biomarket$login37890, :file "src/cljs/biomarket/login.cljs", :type true, :anonymous true, :column 3, :line 51, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$login37896 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.login/t_biomarket$login37896, :file "src/cljs/biomarket/login.cljs", :type true, :anonymous true, :column 3, :line 68, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$login37887 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.login/t_biomarket$login37887, :file "src/cljs/biomarket/login.cljs", :type true, :anonymous true, :column 3, :line 51, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$login37914 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.login/t_biomarket$login37914, :file "src/cljs/biomarket/login.cljs", :type true, :anonymous true, :column 3, :line 120, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$login37903 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.login/t_biomarket$login37903, :file "src/cljs/biomarket/login.cljs", :type true, :anonymous true, :column 3, :line 86, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, init {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/login.cljs", :line 154, :column 16, :end-line 154, :end-column 20, :export true, :arglists (quote ([]))}, :name biomarket.login/init, :variadic false, :file "src/cljs/biomarket/login.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, user-exists? {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/login.cljs", :line 15, :column 8, :end-line 15, :end-column 20, :private true, :arglists (quote ([owner email]))}, :private true, :name biomarket.login/user-exists?, :variadic false, :file "src/cljs/biomarket/login.cljs", :end-column 20, :method-params ([owner email]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([owner email]))}, or-table {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/login.cljs", :line 66, :column 7, :end-line 66, :end-column 15, :arglists (quote ([_ owner]))}, :name biomarket.login/or-table, :variadic false, :file "src/cljs/biomarket/login.cljs", :end-column 15, :method-params ([_ owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ owner]))}, t_biomarket$login37900 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.login/t_biomarket$login37900, :file "src/cljs/biomarket/login.cljs", :type true, :anonymous true, :column 3, :line 86, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$login37887 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([register-display inputs owner meta37888])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.login/->t_biomarket$login37887, :variadic false, :file "src/cljs/biomarket/login.cljs", :method-params ([register-display inputs owner meta37888]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 51, :max-fixed-arity 4, :fn-var true, :arglists (quote ([register-display inputs owner meta37888])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, login {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/login.cljs", :line 118, :column 7, :end-line 118, :end-column 12, :arglists (quote ([_ owner]))}, :name biomarket.login/login, :variadic false, :file "src/cljs/biomarket/login.cljs", :end-column 12, :method-params ([_ owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ owner]))}, ->t_biomarket$login37900 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([login-display inputs owner meta37901])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.login/->t_biomarket$login37900, :variadic false, :file "src/cljs/biomarket/login.cljs", :method-params ([login-display inputs owner meta37901]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 86, :max-fixed-arity 4, :fn-var true, :arglists (quote ([login-display inputs owner meta37901])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, rinputs {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/login.cljs", :line 32, :column 7, :end-line 32, :end-column 14, :arglists (quote ([owner]))}, :name biomarket.login/rinputs, :variadic false, :file "src/cljs/biomarket/login.cljs", :end-column 14, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, ->t_biomarket$login37890 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([register-display inputs owner meta37891])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.login/->t_biomarket$login37890, :variadic false, :file "src/cljs/biomarket/login.cljs", :method-params ([register-display inputs owner meta37891]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 51, :max-fixed-arity 4, :fn-var true, :arglists (quote ([register-display inputs owner meta37891])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$login37914 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([login _ owner meta37915])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.login/->t_biomarket$login37914, :variadic false, :file "src/cljs/biomarket/login.cljs", :method-params ([login _ owner meta37915]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 120, :max-fixed-arity 4, :fn-var true, :arglists (quote ([login _ owner meta37915])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, register-display {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/login.cljs", :line 49, :column 7, :end-line 49, :end-column 23, :arglists (quote ([inputs owner]))}, :name biomarket.login/register-display, :variadic false, :file "src/cljs/biomarket/login.cljs", :end-column 23, :method-params ([inputs owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([inputs owner]))}, login-display {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/login.cljs", :line 84, :column 7, :end-line 84, :end-column 20, :arglists (quote ([inputs owner]))}, :name biomarket.login/login-display, :variadic false, :file "src/cljs/biomarket/login.cljs", :end-column 20, :method-params ([inputs owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 2, :fn-var true, :arglists (quote ([inputs owner]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, secretary secretary.core, secretary.core secretary.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:password2 :email :biomarket.login/inputd :fname meta37904 owner :element :placeholder :password :tests :name :value :username :password1 :type :invalid :state meta37888 _ :login :title :input-type meta37894 or-table meta37924 :inputs meta37891 meta37915 :status :result :register :id :no-icon login :shared :ph inputs :target quote :arglists meta37901 :sname meta37897 register-display login-display :data}, :order [:status :id :result :inputs :email :invalid :fname :sname :password1 :password2 :value :ph :type :name :tests :biomarket.login/inputd register-display :arglists quote inputs owner meta37888 meta37891 or-table _ meta37894 meta37897 :state :register login-display meta37901 meta37904 :element :login :username :password :placeholder :title :input-type :no-icon :data login meta37915 meta37924 :target :shared]}, :doc nil}