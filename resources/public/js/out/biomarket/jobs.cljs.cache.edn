;; Analyzed by ClojureScript 1.8.51
{:use-macros {defroute secretary.core, go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name biomarket.jobs, :imports {History goog.History, EventType goog.history.EventType}, :requires {biomarket.login biomarket.login, ut biomarket.utilities, pd biomarket.projectdisplay, secretary secretary.core, dom om.dom, bid biomarket.bids, biomarket.projectdisplay biomarket.projectdisplay, EventType goog.history.EventType, biomarket.server biomarket.server, biomarket.utilities biomarket.utilities, com biomarket.comments, om.dom om.dom, cljs.core.async cljs.core.async, server biomarket.server, History goog.History, events goog.events, biomarket.bids biomarket.bids, om.core om.core, login biomarket.login, om om.core, secretary.core secretary.core, str clojure.string, biomarket.comments biomarket.comments, clojure.string clojure.string, biomarket.newproject biomarket.newproject, goog.events goog.events}, :uses {pub cljs.core.async, log biomarket.utilities, <! cljs.core.async, chan cljs.core.async, sub cljs.core.async, new-project-view biomarket.newproject, >! cljs.core.async, put! cljs.core.async}, :defs {t_biomarket$jobs66766 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name biomarket.jobs/t_biomarket$jobs66766, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :type true, :anonymous true, :column 3, :line 74, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$jobs66766 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([jobs-view _ owner meta66767])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name biomarket.jobs/->t_biomarket$jobs66766, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :method-params ([jobs-view _ owner meta66767]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 74, :max-fixed-arity 4, :fn-var true, :arglists (quote ([jobs-view _ owner meta66767])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$jobs66747 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([p meta66748])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.jobs/->t_biomarket$jobs66747, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :method-params ([p meta66748]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p meta66748])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$jobs66756 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([project meta66757])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.jobs/->t_biomarket$jobs66756, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :method-params ([project meta66757]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([project meta66757])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$jobs66760 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([jobs-view _ owner meta66761])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name biomarket.jobs/->t_biomarket$jobs66760, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :method-params ([jobs-view _ owner meta66761]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 74, :max-fixed-arity 4, :fn-var true, :arglists (quote ([jobs-view _ owner meta66761])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$jobs66753 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([p owner meta66754])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.jobs/->t_biomarket$jobs66753, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :method-params ([p owner meta66754]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 43, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p owner meta66754])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$jobs66760 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name biomarket.jobs/t_biomarket$jobs66760, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :type true, :anonymous true, :column 3, :line 74, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$jobs66750 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([p meta66751])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.jobs/->t_biomarket$jobs66750, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :method-params ([p meta66751]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p meta66751])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$jobs66753 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.jobs/t_biomarket$jobs66753, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :type true, :anonymous true, :column 3, :line 43, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$jobs66750 {:num-fields 2, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.jobs/t_biomarket$jobs66750, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :type true, :anonymous true, :column 3, :line 38, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, jobs-view {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :line 72, :column 8, :end-line 72, :end-column 17, :private true, :arglists (quote ([_ owner]))}, :private true, :name biomarket.jobs/jobs-view, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :end-column 17, :method-params ([_ owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ owner]))}, t_biomarket$jobs66747 {:num-fields 2, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.jobs/t_biomarket$jobs66747, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :type true, :anonymous true, :column 3, :line 29, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$jobs66756 {:num-fields 2, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.jobs/t_biomarket$jobs66756, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :type true, :anonymous true, :column 3, :line 56, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, secretary secretary.core, secretary.core secretary.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{meta66751 :amount :projects meta66757 :bids owner p :private meta66767 :open-jobs :comments :time _ :title :user-bids :active-jobs meta66748 :bottom-view :broadcast-chan project quote :ut :arglists jobs-view meta66754 :completed-jobs meta66761 :view :views}, :order [:active-jobs p meta66748 :completed-jobs meta66751 :open-jobs :bids :comments :bottom-view owner meta66754 :title :time :user-bids :amount project meta66757 :projects :view :views :ut :broadcast-chan jobs-view :private :arglists quote _ meta66761 meta66767]}, :doc nil}