;; Analyzed by ClojureScript 1.8.51
{:use-macros {defroute secretary.core, go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name biomarket.jobs, :imports {History goog.History, EventType goog.history.EventType}, :requires {biomarket.login biomarket.login, ut biomarket.utilities, pd biomarket.projectdisplay, secretary secretary.core, dom om.dom, bid biomarket.bids, biomarket.projectdisplay biomarket.projectdisplay, EventType goog.history.EventType, biomarket.server biomarket.server, biomarket.utilities biomarket.utilities, om.dom om.dom, cljs.core.async cljs.core.async, server biomarket.server, History goog.History, events goog.events, biomarket.bids biomarket.bids, om.core om.core, login biomarket.login, om om.core, secretary.core secretary.core, str clojure.string, clojure.string clojure.string, biomarket.newproject biomarket.newproject, goog.events goog.events}, :uses {pub cljs.core.async, log biomarket.utilities, <! cljs.core.async, chan cljs.core.async, sub cljs.core.async, new-project-view biomarket.newproject, >! cljs.core.async, put! cljs.core.async}, :defs {jobs-view {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :line 18, :column 8, :end-line 18, :end-column 17, :private true, :arglists (quote ([_ owner]))}, :private true, :name biomarket.jobs/jobs-view, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :end-column 17, :method-params ([_ owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ owner]))}, t_biomarket$jobs65021 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name biomarket.jobs/t_biomarket$jobs65021, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :type true, :anonymous true, :column 3, :line 20, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$jobs65021 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([jobs-view _ owner meta65022])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name biomarket.jobs/->t_biomarket$jobs65021, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :method-params ([jobs-view _ owner meta65022]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 20, :max-fixed-arity 4, :fn-var true, :arglists (quote ([jobs-view _ owner meta65022])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$jobs65027 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name biomarket.jobs/t_biomarket$jobs65027, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :type true, :anonymous true, :column 3, :line 20, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$jobs65027 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([jobs-view _ owner meta65028])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name biomarket.jobs/->t_biomarket$jobs65027, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :method-params ([jobs-view _ owner meta65028]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 20, :max-fixed-arity 4, :fn-var true, :arglists (quote ([jobs-view _ owner meta65028])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, secretary secretary.core, secretary.core secretary.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:projects owner :private :open-jobs _ :active-jobs meta65028 :inputs :broadcast-chan quote :ut :arglists jobs-view meta65022 :completed-jobs :view}, :order [:projects :view :inputs :ut :broadcast-chan :open-jobs :active-jobs :completed-jobs jobs-view :private :arglists quote _ owner meta65022 meta65028]}, :doc nil}