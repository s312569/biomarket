;; Analyzed by ClojureScript 1.8.51
{:use-macros {defroute secretary.core, go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name biomarket.jobs, :imports {History goog.History, EventType goog.history.EventType}, :requires {biomarket.login biomarket.login, ut biomarket.utilities, pd biomarket.projectdisplay, secretary secretary.core, dom om.dom, bid biomarket.bids, biomarket.projectdisplay biomarket.projectdisplay, EventType goog.history.EventType, biomarket.server biomarket.server, biomarket.utilities biomarket.utilities, com biomarket.comments, om.dom om.dom, cljs.core.async cljs.core.async, server biomarket.server, History goog.History, events goog.events, biomarket.bids biomarket.bids, om.core om.core, login biomarket.login, om om.core, secretary.core secretary.core, str clojure.string, biomarket.comments biomarket.comments, clojure.string clojure.string, biomarket.newproject biomarket.newproject, goog.events goog.events}, :uses {pub cljs.core.async, log biomarket.utilities, <! cljs.core.async, chan cljs.core.async, sub cljs.core.async, new-project-view biomarket.newproject, >! cljs.core.async, put! cljs.core.async}, :defs {t_biomarket$jobs120036 {:num-fields 2, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.jobs/t_biomarket$jobs120036, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :type true, :anonymous true, :column 3, :line 70, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$jobs120030 {:num-fields 2, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.jobs/t_biomarket$jobs120030, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :type true, :anonymous true, :column 3, :line 42, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$jobs120033 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.jobs/t_biomarket$jobs120033, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :type true, :anonymous true, :column 3, :line 57, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$jobs120046 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name biomarket.jobs/t_biomarket$jobs120046, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :type true, :anonymous true, :column 3, :line 88, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, remove-bids {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :line 47, :column 7, :end-line 47, :end-column 18, :arglists (quote ([p]))}, :name biomarket.jobs/remove-bids, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :end-column 18, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, ->t_biomarket$jobs120027 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([p meta120028])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.jobs/->t_biomarket$jobs120027, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :method-params ([p meta120028]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p meta120028])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$jobs120040 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name biomarket.jobs/t_biomarket$jobs120040, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :type true, :anonymous true, :column 3, :line 88, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$jobs120027 {:num-fields 2, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.jobs/t_biomarket$jobs120027, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :type true, :anonymous true, :column 3, :line 31, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$jobs120046 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([jobs-view _ owner meta120047])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name biomarket.jobs/->t_biomarket$jobs120046, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :method-params ([jobs-view _ owner meta120047]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 88, :max-fixed-arity 4, :fn-var true, :arglists (quote ([jobs-view _ owner meta120047])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$jobs120030 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([p meta120031])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.jobs/->t_biomarket$jobs120030, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :method-params ([p meta120031]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p meta120031])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, jobs-view {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :line 86, :column 8, :end-line 86, :end-column 17, :private true, :arglists (quote ([_ owner]))}, :private true, :name biomarket.jobs/jobs-view, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :end-column 17, :method-params ([_ owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ owner]))}, ->t_biomarket$jobs120036 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([project meta120037])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.jobs/->t_biomarket$jobs120036, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :method-params ([project meta120037]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 70, :max-fixed-arity 2, :fn-var true, :arglists (quote ([project meta120037])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$jobs120033 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([p owner meta120034])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.jobs/->t_biomarket$jobs120033, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :method-params ([p owner meta120034]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 57, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p owner meta120034])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$jobs120040 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([jobs-view _ owner meta120041])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name biomarket.jobs/->t_biomarket$jobs120040, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :method-params ([jobs-view _ owner meta120041]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 88, :max-fixed-arity 4, :fn-var true, :arglists (quote ([jobs-view _ owner meta120041])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, secretary secretary.core, secretary.core secretary.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:amount :projects meta120028 :bids owner :remove-bids p :private meta120034 :open-jobs :comments :time :type _ :title :user-bids :active-jobs :bottom-view meta120041 meta120037 :id :broadcast-chan project quote :ut :arglists jobs-view :completed-jobs meta120047 meta120031 :view :views :data}, :order [:active-jobs p meta120028 :completed-jobs meta120031 :type :data :remove-bids :id :open-jobs :bids :comments :bottom-view owner meta120034 :title :time :user-bids :amount project meta120037 :projects :view :views :ut :broadcast-chan jobs-view :private :arglists quote _ meta120041 meta120047]}, :doc nil}