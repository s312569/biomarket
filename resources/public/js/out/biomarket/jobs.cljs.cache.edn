;; Analyzed by ClojureScript 1.8.51
{:use-macros {defroute secretary.core, go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name biomarket.jobs, :imports {History goog.History, EventType goog.history.EventType}, :requires {biomarket.login biomarket.login, ut biomarket.utilities, pd biomarket.projectdisplay, secretary secretary.core, dom om.dom, bid biomarket.bids, biomarket.projectdisplay biomarket.projectdisplay, EventType goog.history.EventType, biomarket.server biomarket.server, biomarket.utilities biomarket.utilities, com biomarket.comments, om.dom om.dom, cljs.core.async cljs.core.async, server biomarket.server, History goog.History, events goog.events, biomarket.bids biomarket.bids, om.core om.core, login biomarket.login, om om.core, secretary.core secretary.core, str clojure.string, biomarket.comments biomarket.comments, clojure.string clojure.string, biomarket.newproject biomarket.newproject, goog.events goog.events}, :uses {pub cljs.core.async, log biomarket.utilities, <! cljs.core.async, chan cljs.core.async, sub cljs.core.async, new-project-view biomarket.newproject, >! cljs.core.async, put! cljs.core.async}, :defs {jobs-view {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :line 37, :column 8, :end-line 37, :end-column 17, :private true, :arglists (quote ([_ owner]))}, :private true, :name biomarket.jobs/jobs-view, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :end-column 17, :method-params ([_ owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ owner]))}, t_biomarket$jobs50800 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name biomarket.jobs/t_biomarket$jobs50800, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :type true, :anonymous true, :column 3, :line 39, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$jobs50800 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([jobs-view _ owner meta50801])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name biomarket.jobs/->t_biomarket$jobs50800, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :method-params ([jobs-view _ owner meta50801]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 39, :max-fixed-arity 4, :fn-var true, :arglists (quote ([jobs-view _ owner meta50801])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$jobs50806 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name biomarket.jobs/t_biomarket$jobs50806, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :type true, :anonymous true, :column 3, :line 39, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$jobs50806 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([jobs-view _ owner meta50807])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name biomarket.jobs/->t_biomarket$jobs50806, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/jobs.cljs", :method-params ([jobs-view _ owner meta50807]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 39, :max-fixed-arity 4, :fn-var true, :arglists (quote ([jobs-view _ owner meta50807])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, secretary secretary.core, secretary.core secretary.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:projects meta50801 :bids owner :private :open-jobs :comments :username _ meta50807 :active-jobs :inputs :broadcast-chan quote :ut :arglists jobs-view :completed-jobs :links :view}, :order [:open-jobs :bids :comments :username :links :projects :view :inputs :ut :broadcast-chan :active-jobs :completed-jobs jobs-view :private :arglists quote _ owner meta50801 meta50807]}, :doc nil}