;; Analyzed by ClojureScript 1.8.51
{:use-macros {defroute secretary.core, go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name biomarket.comments, :imports {History goog.History, EventType goog.history.EventType}, :requires {ut biomarket.utilities, secretary secretary.core, dom om.dom, EventType goog.history.EventType, biomarket.utilities biomarket.utilities, om.dom om.dom, cljs.core.async cljs.core.async, cljs-time.core cljs-time.core, History goog.History, events goog.events, time cljs-time.core, tf cljs-time.format, om.core om.core, om om.core, secretary.core secretary.core, str clojure.string, cljs-time.format cljs-time.format, clojure.string clojure.string, goog.events goog.events}, :uses {pub cljs.core.async, log biomarket.utilities, <! cljs.core.async, chan cljs.core.async, sub cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {comment-server-call {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/comments.cljs", :line 19, :column 8, :end-line 19, :end-column 27, :private true, :arglists (quote ([owner pid]))}, :private true, :name biomarket.comments/comment-server-call, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/comments.cljs", :end-column 27, :method-params ([owner pid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([owner pid]))}, submit-comment-call {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/comments.cljs", :line 25, :column 8, :end-line 25, :end-column 27, :private true, :arglists (quote ([owner pid]))}, :private true, :name biomarket.comments/submit-comment-call, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/comments.cljs", :end-column 27, :method-params ([owner pid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([owner pid]))}, show-comment {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/comments.cljs", :line 38, :column 8, :end-line 38, :end-column 20, :private true, :arglists (quote ([comment owner]))}, :private true, :name biomarket.comments/show-comment, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/comments.cljs", :end-column 20, :method-params ([comment owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([comment owner]))}, comment-control {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/comments.cljs", :line 51, :column 8, :end-line 51, :end-column 23, :private true, :arglists (quote ([inputs owner]))}, :private true, :name biomarket.comments/comment-control, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/comments.cljs", :end-column 23, :method-params ([inputs owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([inputs owner]))}, comments {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/comments.cljs", :line 63, :column 7, :end-line 63, :end-column 15, :arglists (quote ([project owner]))}, :name biomarket.comments/comments, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/comments.cljs", :end-column 15, :method-params ([project owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([project owner]))}, t_biomarket$comments31147 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.comments/t_biomarket$comments31147, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/comments.cljs", :type true, :anonymous true, :column 3, :line 65, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$comments31147 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comments project owner meta31148])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.comments/->t_biomarket$comments31147, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/comments.cljs", :method-params ([comments project owner meta31148]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 65, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comments project owner meta31148])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$comments31159 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.comments/t_biomarket$comments31159, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/comments.cljs", :type true, :anonymous true, :column 3, :line 65, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$comments31159 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comments project owner meta31160])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.comments/->t_biomarket$comments31159, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/comments.cljs", :method-params ([comments project owner meta31160]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 65, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comments project owner meta31160])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, secretary secretary.core, secretary.core secretary.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{meta31160 :bidee owner :cid :name :value :comments :time :username :submit meta31148 :type :invalid :title comments :input-type :rows :submitf :bidder :pid :inputs :status :result :id :comment :no-icon :action project quote :arglists :data}, :order [:status :result :comments :pid :comment :inputs :value :bidder :username :time :cid :action :submit :bidee :type :rows :name :input-type :invalid :title :submitf :no-icon :data :id comments :arglists quote project owner meta31148 meta31160]}, :doc nil}