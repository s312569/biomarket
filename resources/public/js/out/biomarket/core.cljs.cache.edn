;; Analyzed by ClojureScript 1.8.51
{:use-macros {defroute secretary.core, go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name biomarket.core, :imports {History goog.History, EventType goog.history.EventType}, :requires {biomarket.login biomarket.login, ut biomarket.utilities, secretary secretary.core, biomarket.projects biomarket.projects, dom om.dom, EventType goog.history.EventType, biomarket.server biomarket.server, biomarket.utilities biomarket.utilities, biomarket.find biomarket.find, om.dom om.dom, cljs.core.async cljs.core.async, biomarket.jobs biomarket.jobs, server biomarket.server, History goog.History, events goog.events, biomarket.profile biomarket.profile, om.core om.core, login biomarket.login, om om.core, secretary.core secretary.core, goog.events goog.events, biomarket.dashboard biomarket.dashboard}, :uses {find-view biomarket.find, pub cljs.core.async, log biomarket.utilities, <! cljs.core.async, chan cljs.core.async, projects-view-control biomarket.projects, sub cljs.core.async, dashboard biomarket.dashboard, >! cljs.core.async, jobs-view biomarket.jobs, put! cljs.core.async, profile-view biomarket.profile}, :defs {->t_biomarket$core50815 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([header current owner meta50816])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.core/->t_biomarket$core50815, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/core.cljs", :method-params ([header current owner meta50816]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 36, :max-fixed-arity 4, :fn-var true, :arglists (quote ([header current owner meta50816])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$core50821 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([header current owner meta50822])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.core/->t_biomarket$core50821, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/core.cljs", :method-params ([header current owner meta50822]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 36, :max-fixed-arity 4, :fn-var true, :arglists (quote ([header current owner meta50822])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$core50839 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.core/t_biomarket$core50839, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/core.cljs", :type true, :anonymous true, :column 3, :line 77, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, init {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/core.cljs", :line 106, :column 16, :end-line 106, :end-column 20, :export true, :arglists (quote ([]))}, :name biomarket.core/init, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ->t_biomarket$core50827 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app-control _ owner meta50828])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.core/->t_biomarket$core50827, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/core.cljs", :method-params ([app-control _ owner meta50828]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 77, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app-control _ owner meta50828])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$core50815 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.core/t_biomarket$core50815, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/core.cljs", :type true, :anonymous true, :column 3, :line 36, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, history {:name biomarket.core/history, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/core.cljs", :line 23, :column 1, :end-line 23, :end-column 13, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/core.cljs", :line 23, :column 6, :end-line 23, :end-column 13}}, app-control {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/core.cljs", :line 75, :column 7, :end-line 75, :end-column 18, :arglists (quote ([_ owner]))}, :name biomarket.core/app-control, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/core.cljs", :end-column 18, :method-params ([_ owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ owner]))}, header {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/core.cljs", :line 34, :column 7, :end-line 34, :end-column 13, :arglists (quote ([current owner]))}, :name biomarket.core/header, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/core.cljs", :end-column 13, :method-params ([current owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([current owner]))}, ->t_biomarket$core50839 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app-control _ owner meta50840])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.core/->t_biomarket$core50839, :variadic false, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/core.cljs", :method-params ([app-control _ owner meta50840]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 77, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app-control _ owner meta50840])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$core50827 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.core/t_biomarket$core50827, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/core.cljs", :type true, :anonymous true, :column 3, :line 77, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$core50821 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.core/t_biomarket$core50821, :file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/core.cljs", :type true, :anonymous true, :column 3, :line 36, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, secretary secretary.core, secretary.core secretary.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:biomarket.core/projects meta50840 :biomarket.core/logout :nav-items owner :biomarket.core/dash :biomarket.core/profile :biomarket.core/jobs _ meta50828 :biomarket.core/navigation app-control header :current :shared :biomarket.core/find :target quote meta50816 :arglists current :user meta50822 :data}, :order [:nav-items :biomarket.core/dash :biomarket.core/profile :biomarket.core/jobs :biomarket.core/projects :biomarket.core/find :biomarket.core/logout :biomarket.core/navigation header :arglists quote current owner meta50816 meta50822 :current :data :user app-control _ meta50828 meta50840 :target :shared]}, :doc nil}