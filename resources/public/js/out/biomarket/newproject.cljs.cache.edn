;; Analyzed by ClojureScript 1.8.51
{:use-macros {defroute secretary.core, go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name biomarket.newproject, :imports {History goog.History, EventType goog.history.EventType}, :requires {ut biomarket.utilities, secretary secretary.core, dom om.dom, EventType goog.history.EventType, biomarket.server biomarket.server, biomarket.utilities biomarket.utilities, om.dom om.dom, cljs.core.async cljs.core.async, cljs-time.core cljs-time.core, server biomarket.server, History goog.History, events goog.events, time cljs-time.core, tf cljs-time.format, biomarket.skills biomarket.skills, om.core om.core, om om.core, secretary.core secretary.core, skills biomarket.skills, str clojure.string, cljs-time.format cljs-time.format, clojure.string clojure.string, goog.events goog.events}, :uses {pub cljs.core.async, log biomarket.utilities, <! cljs.core.async, chan cljs.core.async, sub cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {->t_biomarket$newproject91883 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([basis-radios state owner meta91884])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject91883, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([basis-radios state owner meta91884]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 97, :max-fixed-arity 4, :fn-var true, :arglists (quote ([basis-radios state owner meta91884])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject91915 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project-nav control owner meta91916])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject91915, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project-nav control owner meta91916]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 195, :max-fixed-arity 4, :fn-var true, :arglists (quote ([new-project-nav control owner meta91916])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject91933 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject91933, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 225, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, new-project {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 128, :column 8, :end-line 128, :end-column 19, :private true, :arglists (quote ([[finputs selected-skills basis] owner]))}, :private true, :name biomarket.newproject/new-project, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 19, :method-params ([p__91896 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[finputs selected-skills basis] owner]))}, ->t_biomarket$newproject91898 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project p__91896 owner vec__91897 finputs selected-skills basis meta91899])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject91898, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project p__91896 owner vec__91897 finputs selected-skills basis meta91899]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 130, :max-fixed-arity 8, :fn-var true, :arglists (quote ([new-project p__91896 owner vec__91897 finputs selected-skills basis meta91899])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject91898 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject91898, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 130, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject91874 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([skills selected owner meta91875])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject91874, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([skills selected owner meta91875]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 63, :max-fixed-arity 4, :fn-var true, :arglists (quote ([skills selected owner meta91875])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject91883 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject91883, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 97, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject91915 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject91915, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 195, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, save-data {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 43, :column 7, :end-line 43, :end-column 16, :arglists (quote ([owner]))}, :name biomarket.newproject/save-data, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 16, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, all-good? {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 21, :column 7, :end-line 21, :end-column 16, :arglists (quote ([owner]))}, :name biomarket.newproject/all-good?, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 16, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, t_biomarket$newproject91902 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject91902, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 130, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, min-now {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 216, :column 8, :end-line 216, :end-column 15, :private true, :arglists (quote ([] [a] [d a])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [a] [d a]), :arglists ([] [a] [d a]), :arglists-meta (nil nil nil)}}, :private true, :name biomarket.newproject/min-now, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [a] [d a]), :arglists ([] [a] [d a]), :arglists-meta (nil nil nil)}, :method-params ([] [a] [d a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 216, :end-line 216, :max-fixed-arity 2, :fn-var true, :arglists ([] [a] [d a])}, ->t_biomarket$newproject91889 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([basis-radios state owner meta91890])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject91889, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([basis-radios state owner meta91890]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 97, :max-fixed-arity 4, :fn-var true, :arglists (quote ([basis-radios state owner meta91890])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject91865 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([skills selected owner meta91866])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject91865, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([skills selected owner meta91866]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 63, :max-fixed-arity 4, :fn-var true, :arglists (quote ([skills selected owner meta91866])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject91874 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject91874, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 63, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, basis-radios {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 95, :column 8, :end-line 95, :end-column 20, :private true, :arglists (quote ([state owner]))}, :private true, :name biomarket.newproject/basis-radios, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 20, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner]))}, t_biomarket$newproject91889 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject91889, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 97, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, new-project-view {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 223, :column 7, :end-line 223, :end-column 23, :arglists (quote ([nav-tag owner]))}, :name biomarket.newproject/new-project-view, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 23, :method-params ([nav-tag owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 223, :end-line 223, :max-fixed-arity 2, :fn-var true, :arglists (quote ([nav-tag owner]))}, t_biomarket$newproject91909 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject91909, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 195, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject91865 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject91865, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 63, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject91909 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project-nav control owner meta91910])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject91909, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project-nav control owner meta91910]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 195, :max-fixed-arity 4, :fn-var true, :arglists (quote ([new-project-nav control owner meta91910])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, new-project-nav {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 193, :column 8, :end-line 193, :end-column 23, :private true, :arglists (quote ([control owner]))}, :private true, :name biomarket.newproject/new-project-nav, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 23, :method-params ([control owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 2, :fn-var true, :arglists (quote ([control owner]))}, t_biomarket$newproject91948 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject91948, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 225, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, skills {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 61, :column 8, :end-line 61, :end-column 14, :private true, :arglists (quote ([selected owner]))}, :private true, :name biomarket.newproject/skills, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 14, :method-params ([selected owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 2, :fn-var true, :arglists (quote ([selected owner]))}, ->t_biomarket$newproject91948 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project-view nav-tag owner meta91949])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject91948, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project-view nav-tag owner meta91949]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 225, :max-fixed-arity 4, :fn-var true, :arglists (quote ([new-project-view nav-tag owner meta91949])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject91902 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project p__91896 owner vec__91901 finputs selected-skills basis meta91903])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject91902, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project p__91896 owner vec__91901 finputs selected-skills basis meta91903]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 130, :max-fixed-arity 8, :fn-var true, :arglists (quote ([new-project p__91896 owner vec__91901 finputs selected-skills basis meta91903])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject91933 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project-view nav-tag owner meta91934])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject91933, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project-view nav-tag owner meta91934]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 225, :max-fixed-arity 4, :fn-var true, :arglists (quote ([new-project-view nav-tag owner meta91934])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, skills-reg {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 176, :column 8, :end-line 176, :end-column 18, :private true, :arglists (quote ([owner data]))}, :private true, :name biomarket.newproject/skills-reg, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 18, :method-params ([owner data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 2, :fn-var true, :arglists (quote ([owner data]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, secretary secretary.core, secretary.core secretary.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:description :min nav-tag :biomarket.newproject/save :date :home new-project :selected-skills :fname meta91866 owner :selected meta91949 :element :placeholder p__91896 :private :tests :name :value selected-skills :drop selected :basis vec__91901 :spid :type :invalid meta91899 :biomarket.newproject/selected :save :biomarket.newproject/inputd meta91884 :title meta91875 meta91890 :biomarket.newproject/basis :rows vec__91897 basis-radios :inputs new-project-view basis :skills :biddead :all-skills :label :id state :control :saved meta91903 new-project-nav :projdead meta91910 :hours :budget finputs skills quote :arglists control meta91934 :new-project :biomarket.newproject/saved :nav meta91916 :data}, :order [:value :basis :invalid :selected :selected-skills :inputs :fname :element :type :data :new-project :skills :biomarket.newproject/saved :saved :all-skills :biomarket.newproject/selected skills :private :arglists quote selected owner meta91866 meta91875 :biomarket.newproject/basis basis-radios state meta91884 meta91890 :title :biomarket.newproject/inputd new-project finputs selected-skills basis p__91896 vec__91897 meta91899 vec__91901 meta91903 :biddead :date :projdead :min :id :control :label :drop new-project-nav control meta91910 meta91916 :nav :biomarket.newproject/save :save :home :description :hours :budget :placeholder :tests :name :spid :rows new-project-view nav-tag meta91934 meta91949]}, :doc nil}