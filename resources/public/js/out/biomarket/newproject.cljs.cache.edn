;; Analyzed by ClojureScript 1.8.51
{:use-macros {defroute secretary.core, go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name biomarket.newproject, :imports {History goog.History, EventType goog.history.EventType}, :requires {ut biomarket.utilities, secretary secretary.core, dom om.dom, EventType goog.history.EventType, biomarket.utilities biomarket.utilities, om.dom om.dom, cljs.core.async cljs.core.async, cljs-time.core cljs-time.core, History goog.History, events goog.events, time cljs-time.core, tf cljs-time.format, om.core om.core, om om.core, secretary.core secretary.core, str clojure.string, cljs-time.format cljs-time.format, clojure.string clojure.string, goog.events goog.events}, :uses {pub cljs.core.async, log biomarket.utilities, <! cljs.core.async, chan cljs.core.async, sub cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {t_biomarket$newproject120151 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject120151, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 136, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, get-skills {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 41, :column 8, :end-line 41, :end-column 18, :private true, :arglists (quote ([owner]))}, :private true, :name biomarket.newproject/get-skills, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 18, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, new-project {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 134, :column 8, :end-line 134, :end-column 19, :private true, :arglists (quote ([[finputs selected-skills basis] owner]))}, :private true, :name biomarket.newproject/new-project, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 19, :method-params ([p__120149 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[finputs selected-skills basis] owner]))}, ->t_biomarket$newproject120127 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([skills selected owner meta120128])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject120127, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([skills selected owner meta120128]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 70, :max-fixed-arity 4, :fn-var true, :arglists (quote ([skills selected owner meta120128])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject120136 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([basis-radios state owner meta120137])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject120136, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([basis-radios state owner meta120137]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 103, :max-fixed-arity 4, :fn-var true, :arglists (quote ([basis-radios state owner meta120137])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject120186 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project-view nav-tag owner meta120187])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject120186, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project-view nav-tag owner meta120187]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 232, :max-fixed-arity 4, :fn-var true, :arglists (quote ([new-project-view nav-tag owner meta120187])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject120168 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project-nav control owner meta120169])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject120168, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project-nav control owner meta120169]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 201, :max-fixed-arity 4, :fn-var true, :arglists (quote ([new-project-nav control owner meta120169])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, save-data {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 48, :column 7, :end-line 48, :end-column 16, :arglists (quote ([owner]))}, :name biomarket.newproject/save-data, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 16, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, all-good? {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 19, :column 7, :end-line 19, :end-column 16, :arglists (quote ([owner]))}, :name biomarket.newproject/all-good?, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 16, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, ->t_biomarket$newproject120201 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project-view nav-tag owner meta120202])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject120201, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project-view nav-tag owner meta120202]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 232, :max-fixed-arity 4, :fn-var true, :arglists (quote ([new-project-view nav-tag owner meta120202])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject120151 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project p__120149 owner vec__120150 finputs selected-skills basis meta120152])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject120151, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project p__120149 owner vec__120150 finputs selected-skills basis meta120152]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 136, :max-fixed-arity 8, :fn-var true, :arglists (quote ([new-project p__120149 owner vec__120150 finputs selected-skills basis meta120152])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject120162 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject120162, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 201, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject120118 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject120118, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 70, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, min-now {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 223, :column 8, :end-line 223, :end-column 15, :private true, :arglists (quote ([] [a] [d a])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [a] [d a]), :arglists ([] [a] [d a]), :arglists-meta (nil nil nil)}}, :private true, :name biomarket.newproject/min-now, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [a] [d a]), :arglists ([] [a] [d a]), :arglists-meta (nil nil nil)}, :method-params ([] [a] [d a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 223, :end-line 223, :max-fixed-arity 2, :fn-var true, :arglists ([] [a] [d a])}, ->t_biomarket$newproject120118 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([skills selected owner meta120119])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject120118, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([skills selected owner meta120119]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 70, :max-fixed-arity 4, :fn-var true, :arglists (quote ([skills selected owner meta120119])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject120186 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject120186, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 232, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject120127 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject120127, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 70, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject120136 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject120136, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 103, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject120168 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject120168, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 201, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, basis-radios {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 101, :column 8, :end-line 101, :end-column 20, :private true, :arglists (quote ([state owner]))}, :private true, :name biomarket.newproject/basis-radios, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 20, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner]))}, new-project-view {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 230, :column 7, :end-line 230, :end-column 23, :arglists (quote ([nav-tag owner]))}, :name biomarket.newproject/new-project-view, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 23, :method-params ([nav-tag owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 230, :end-line 230, :max-fixed-arity 2, :fn-var true, :arglists (quote ([nav-tag owner]))}, ->t_biomarket$newproject120142 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([basis-radios state owner meta120143])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject120142, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([basis-radios state owner meta120143]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 103, :max-fixed-arity 4, :fn-var true, :arglists (quote ([basis-radios state owner meta120143])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, new-project-nav {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 199, :column 8, :end-line 199, :end-column 23, :private true, :arglists (quote ([control owner]))}, :private true, :name biomarket.newproject/new-project-nav, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 23, :method-params ([control owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 2, :fn-var true, :arglists (quote ([control owner]))}, skills {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 68, :column 8, :end-line 68, :end-column 14, :private true, :arglists (quote ([selected owner]))}, :private true, :name biomarket.newproject/skills, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 14, :method-params ([selected owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists (quote ([selected owner]))}, ->t_biomarket$newproject120162 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project-nav control owner meta120163])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject120162, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project-nav control owner meta120163]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 201, :max-fixed-arity 4, :fn-var true, :arglists (quote ([new-project-nav control owner meta120163])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject120155 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project p__120149 owner vec__120154 finputs selected-skills basis meta120156])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject120155, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project p__120149 owner vec__120154 finputs selected-skills basis meta120156]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 136, :max-fixed-arity 8, :fn-var true, :arglists (quote ([new-project p__120149 owner vec__120154 finputs selected-skills basis meta120156])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject120155 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject120155, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 136, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject120142 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject120142, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 103, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject120201 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject120201, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 232, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, skills-reg {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 182, :column 8, :end-line 182, :end-column 18, :private true, :arglists (quote ([owner data]))}, :private true, :name biomarket.newproject/skills-reg, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 18, :method-params ([owner data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 2, :fn-var true, :arglists (quote ([owner data]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, secretary secretary.core, secretary.core secretary.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:description vec__120150 meta120163 :min p__120149 meta120202 nav-tag :biomarket.newproject/save :date meta120152 :home new-project :selected-skills :fname owner :selected :element :placeholder meta120187 :private :tests meta120143 :name :value selected-skills :drop selected :basis meta120137 meta120169 :spid :type :invalid :biomarket.newproject/selected :save :biomarket.newproject/inputd meta120119 :title :biomarket.newproject/basis :rows basis-radios :inputs new-project-view basis :skills :biddead :status :result :label :id state :control vec__120154 new-project-nav meta120128 :projdead :hours :budget finputs skills quote :arglists control meta120156 :biomarket.newproject/saved :nav :data}, :order [:value :basis :invalid :selected :selected-skills :inputs :fname :element :status :result :skills :biomarket.newproject/saved :type :biomarket.newproject/selected skills :private :arglists quote selected owner meta120119 meta120128 :biomarket.newproject/basis basis-radios state meta120137 meta120143 :title :biomarket.newproject/inputd new-project finputs selected-skills basis p__120149 vec__120150 meta120152 vec__120154 meta120156 :biddead :date :projdead :min :id :control :label :drop new-project-nav control meta120163 meta120169 :nav :biomarket.newproject/save :save :home :description :hours :budget :placeholder :tests :name :spid :rows :data new-project-view nav-tag meta120187 meta120202]}, :doc nil}