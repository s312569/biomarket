;; Analyzed by ClojureScript 1.8.51
{:use-macros {defroute secretary.core, go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name biomarket.newproject, :imports {History goog.History, EventType goog.history.EventType}, :requires {ut biomarket.utilities, secretary secretary.core, dom om.dom, EventType goog.history.EventType, biomarket.utilities biomarket.utilities, om.dom om.dom, cljs.core.async cljs.core.async, cljs-time.core cljs-time.core, History goog.History, events goog.events, time cljs-time.core, tf cljs-time.format, om.core om.core, om om.core, secretary.core secretary.core, str clojure.string, cljs-time.format cljs-time.format, clojure.string clojure.string, goog.events goog.events}, :uses {pub cljs.core.async, log biomarket.utilities, <! cljs.core.async, chan cljs.core.async, sub cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {->t_biomarket$newproject32217 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project-view nav-tag owner meta32218])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject32217, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project-view nav-tag owner meta32218]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 231, :max-fixed-arity 4, :fn-var true, :arglists (quote ([new-project-view nav-tag owner meta32218])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject32149 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([skills selected owner meta32150])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject32149, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([skills selected owner meta32150]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 70, :max-fixed-arity 4, :fn-var true, :arglists (quote ([skills selected owner meta32150])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, get-skills {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 41, :column 8, :end-line 41, :end-column 18, :private true, :arglists (quote ([owner]))}, :private true, :name biomarket.newproject/get-skills, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 18, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, new-project {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 134, :column 8, :end-line 134, :end-column 19, :private true, :arglists (quote ([[finputs selected-skills basis] owner]))}, :private true, :name biomarket.newproject/new-project, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 19, :method-params ([p__32180 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[finputs selected-skills basis] owner]))}, t_biomarket$newproject32173 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject32173, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 103, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject32182 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject32182, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 136, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject32182 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project p__32180 owner vec__32181 finputs selected-skills basis meta32183])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject32182, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project p__32180 owner vec__32181 finputs selected-skills basis meta32183]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 136, :max-fixed-arity 8, :fn-var true, :arglists (quote ([new-project p__32180 owner vec__32181 finputs selected-skills basis meta32183])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject32167 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject32167, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 103, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, save-data {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 48, :column 7, :end-line 48, :end-column 16, :arglists (quote ([owner]))}, :name biomarket.newproject/save-data, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 16, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, all-good? {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 19, :column 7, :end-line 19, :end-column 16, :arglists (quote ([owner]))}, :name biomarket.newproject/all-good?, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 16, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, t_biomarket$newproject32193 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject32193, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 201, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, min-now {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 222, :column 8, :end-line 222, :end-column 15, :private true, :arglists (quote ([] [a] [d a])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [a] [d a]), :arglists ([] [a] [d a]), :arglists-meta (nil nil nil)}}, :private true, :name biomarket.newproject/min-now, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [a] [d a]), :arglists ([] [a] [d a]), :arglists-meta (nil nil nil)}, :method-params ([] [a] [d a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 2, :fn-var true, :arglists ([] [a] [d a])}, ->t_biomarket$newproject32158 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([skills selected owner meta32159])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject32158, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([skills selected owner meta32159]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 70, :max-fixed-arity 4, :fn-var true, :arglists (quote ([skills selected owner meta32159])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject32149 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject32149, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 70, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, basis-radios {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 101, :column 8, :end-line 101, :end-column 20, :private true, :arglists (quote ([state owner]))}, :private true, :name biomarket.newproject/basis-radios, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 20, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner]))}, new-project-view {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 229, :column 7, :end-line 229, :end-column 23, :arglists (quote ([nav-tag owner]))}, :name biomarket.newproject/new-project-view, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 23, :method-params ([nav-tag owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 229, :end-line 229, :max-fixed-arity 2, :fn-var true, :arglists (quote ([nav-tag owner]))}, t_biomarket$newproject32232 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject32232, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 231, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject32167 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([basis-radios state owner meta32168])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject32167, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([basis-radios state owner meta32168]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 103, :max-fixed-arity 4, :fn-var true, :arglists (quote ([basis-radios state owner meta32168])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject32232 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project-view nav-tag owner meta32233])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject32232, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project-view nav-tag owner meta32233]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 231, :max-fixed-arity 4, :fn-var true, :arglists (quote ([new-project-view nav-tag owner meta32233])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject32199 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project-nav control owner meta32200])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject32199, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project-nav control owner meta32200]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 201, :max-fixed-arity 4, :fn-var true, :arglists (quote ([new-project-nav control owner meta32200])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject32173 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([basis-radios state owner meta32174])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject32173, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([basis-radios state owner meta32174]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 103, :max-fixed-arity 4, :fn-var true, :arglists (quote ([basis-radios state owner meta32174])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, new-project-nav {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 199, :column 8, :end-line 199, :end-column 23, :private true, :arglists (quote ([control owner]))}, :private true, :name biomarket.newproject/new-project-nav, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 23, :method-params ([control owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 2, :fn-var true, :arglists (quote ([control owner]))}, t_biomarket$newproject32217 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject32217, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 231, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject32186 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject32186, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 136, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject32186 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project p__32180 owner vec__32185 finputs selected-skills basis meta32187])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject32186, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project p__32180 owner vec__32185 finputs selected-skills basis meta32187]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 136, :max-fixed-arity 8, :fn-var true, :arglists (quote ([new-project p__32180 owner vec__32185 finputs selected-skills basis meta32187])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, skills {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 68, :column 8, :end-line 68, :end-column 14, :private true, :arglists (quote ([selected owner]))}, :private true, :name biomarket.newproject/skills, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 14, :method-params ([selected owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists (quote ([selected owner]))}, t_biomarket$newproject32199 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject32199, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 201, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_biomarket$newproject32158 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/t_biomarket$newproject32158, :file "src/cljs/biomarket/newproject.cljs", :type true, :anonymous true, :column 3, :line 70, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_biomarket$newproject32193 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([new-project-nav control owner meta32194])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name biomarket.newproject/->t_biomarket$newproject32193, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :method-params ([new-project-nav control owner meta32194]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 201, :max-fixed-arity 4, :fn-var true, :arglists (quote ([new-project-nav control owner meta32194])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, skills-reg {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/biomarket/src/cljs/biomarket/newproject.cljs", :line 182, :column 8, :end-line 182, :end-column 18, :private true, :arglists (quote ([owner data]))}, :private true, :name biomarket.newproject/skills-reg, :variadic false, :file "src/cljs/biomarket/newproject.cljs", :end-column 18, :method-params ([owner data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 2, :fn-var true, :arglists (quote ([owner data]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, secretary secretary.core, secretary.core secretary.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:description meta32183 :min nav-tag :biomarket.newproject/save :date :home new-project :selected-skills :fname owner :selected :element :placeholder :private :tests meta32159 :name meta32168 :value meta32200 selected-skills :drop selected :basis :spid :type meta32194 :invalid :biomarket.newproject/selected :save :biomarket.newproject/inputd :title :biomarket.newproject/basis :rows basis-radios vec__32181 :inputs new-project-view basis meta32150 :skills :biddead :status :result :label :id state :control new-project-nav :projdead :hours :budget finputs skills meta32187 quote :arglists control meta32218 meta32174 :biomarket.newproject/saved :nav meta32233 p__32180 :data vec__32185}, :order [:value :basis :invalid :selected :selected-skills :inputs :fname :element :status :result :skills :biomarket.newproject/saved :type :biomarket.newproject/selected skills :private :arglists quote selected owner meta32150 meta32159 :biomarket.newproject/basis basis-radios state meta32168 meta32174 :title :biomarket.newproject/inputd new-project finputs selected-skills basis p__32180 vec__32181 meta32183 vec__32185 meta32187 :biddead :date :projdead :min :id :control :label :drop new-project-nav control meta32194 meta32200 :nav :biomarket.newproject/save :save :home :description :hours :budget :placeholder :tests :name :spid :rows :data new-project-view nav-tag meta32218 meta32233]}, :doc nil}